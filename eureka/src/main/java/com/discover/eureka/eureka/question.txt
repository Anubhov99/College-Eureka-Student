TASK 2-

1) create a spring boot application with three rest endpoints namely create, retrieval and a healthcheck endpoint to check if the backend call is getting success or not. Use h2 db as backend.
Implement proper loggers in all the layers.
Layer Structure-controller->service->BO->EO->DAO
Note-all classes should follow interfaces and its implementation class.
All constants should be in util package in constants class.
Use mapstruct to map pojo classes to new vo in service layer.
Do basic validations like not null, min and max value for retrieval endpoint using annotations.
Use gradle as build tool.



2)create a second spring boot application and add a rest end point to call first spring boot application retrieval end point using spring rest template and another rest endpoint to call same retrieval endpoint using feign client.
Implement proper loggers in all the layers.
Layer Structure-controller->service->BO->EO->Rest Helper
Note-all clases should follow interfaces and its implementation class.
Do basic validations like not null, min and max value for retrival endpoint using annotations.
All constants should be in util package in constants class.
Use mapstruct to map pojo classes.
Use gradle as build tool.



3) Create a spring cloud config server to externalize the configuration to git.
1 & 2 should implement cloud config server and all constants should be externalized to git.



4)implement cloud gateway design pattern using spring cloud gateway.
Calls to 1 and 2 spring boot applications should be routed through this gateway.



5) debugging code in ide and setting env variables.

6) Setup Mockito and write Junit test cases

7) Setup BDD using Cucumber

8) Setup wiremock and use wiremock
